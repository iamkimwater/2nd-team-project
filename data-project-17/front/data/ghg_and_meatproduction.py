# -*- coding: utf-8 -*-
"""ghg_and_meatproduction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NCd5zQOcA8tAPhufaNwh1VE5YDRfl4A5
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
import scipy as sp
import scipy.stats

# %matplotlib inline

datapath1 = './ghg-emissions.csv'
df_greenhousegas = pd.read_csv(datapath1)

print(df_greenhousegas.shape)
print("-------"*15)
print(df_greenhousegas.columns)
print("-------"*15)
print(df_greenhousegas.info())

df_greenhousegas.head()

""">* 온실가스는 1단위 MtCo2e (Million metric tons of carbon dioxide equivalent)
* Country가 너무 많으니 상위 20개국으로 정리하고 GDP와 육류생산/소비량 데이터에 없는 국가도 제외할 예정
* 결측치 처리
"""

df_greenhousegas = df_greenhousegas.drop(index=[193, 194])

df_greenhousegas = df_greenhousegas.drop(['unit', '1990'], axis=1)

df_greenhousegas.rename(columns={'Country/Region':'Country'}, inplace=True)

df_greenhousegas_top = df_greenhousegas.sort_values(by='1991', ascending=False)[0:30].reset_index(drop=True)

df_greenhousegas_top

datapath2 = './global-meat-production.csv'
df_production = pd.read_csv(datapath2)

print(df_production.shape)
print("-------"*15)
print(df_production.columns)
print("-------"*15)
print(df_production.info())

df_production.head()

df_production['Entity'].unique()

df_production = df_production.set_index('Entity')

df_production_ft = df_production.drop(['World', 'Europe', 'Asia', 'Americas', 'European Union', 'Asia, Central',
       'Eastern Asia', 'Low Income Food Deficit Countries', 'Southern Europe', 'Least Developed Countries', 'Australia & New Zealand', 'Central America', 'Europe, Western', 'Net Food Importing Developing Countries', 'Northern America','Northern Europe',
 'Oceania','South America', 'South Eastern Asia', 'Southern Asia', 'Southern Europe','Africa','Western Africa','Small island developing States', 'Land Locked Developing Countries','Southern Africa','Northern Africa',
 'Western Asia',
 'USSR'])

df_production_top_ft = df_production_ft.groupby('Year').get_group(1992).sort_values(by='Livestock Primary - Meat, Total - 1765 - Production - 5510 - tonnes (tonnes)', ascending=False)[:30]

df_production_top_ft.index

set(df_production_top_ft.index) - set(df_greenhousegas_top['Country'])

set(df_greenhousegas_top['Country']) - set(df_production_top_ft.index)

"""df_greenhousegas_top : ['Colombia',
 'Democratic Republic of the Congo',
 'Iran',
 'Kazakhstan',
 'Malaysia',
 'Myanmar',
 'Nigeria',
 'Saudi Arabia',
 'South Korea',
 'Venezuela'] 

df_production: ['Belgium-Luxembourg',
 'Czechoslovakia',
 'Denmark',
 'Eastern Africa',
 'Eastern Europe',
 'Pakistan',
 'Philippines',
 'Romania',
 'Taiwan',
 'Thailand']
"""

df_greenhousegas_top.set_index('Country', inplace=True)

df_greenhousegas_top_20 = df_greenhousegas_top.drop( ['Colombia', 'Democratic Republic of the Congo', 'Iran', 'Kazakhstan', 'Malaysia', 'Myanmar', 'Nigeria', 'Saudi Arabia', 'South Korea', 'Venezuela'])

df_greenhousegas_top_20.index

df_production_ft.groupby('Year').get_group(1992).sort_values(by='Livestock Primary - Meat, Total - 1765 - Production - 5510 - tonnes (tonnes)', ascending=False)[:30]

df_production_ft2 = df_production_ft.rename(columns={'Livestock Primary - Meat, Total - 1765 - Production - 5510 - tonnes (tonnes)':'Total Production(tonnes/year)'})

df_production_ft2

df_production_ft2 = pd.DataFrame(df_production_ft2.drop('Code', axis=1).reset_index().pivot('Entity', 'Year', 'Total Production(tonnes/year)'))

df_production_ft2

df_production_top_20 = df_production_ft2.loc[['United States', 'China', 'Russia', 'Brazil', 'Indonesia', 'Japan',
       'Germany', 'India', 'Ukraine', 'United Kingdom', 'Canada', 'Australia',
       'France', 'Italy', 'Mexico', 'Poland', 'South Africa', 'Argentina',
       'Spain', 'Netherlands']]

df_production_top_20_eda  = pd.DataFrame(df_production_top_20.unstack()).reset_index()

c = df_production_top_20_eda['Year'] >= 1991

df_production_top_20_eda = df_production_top_20_eda[c]

df_production_pivot = pd.DataFrame(df_production_top_20_eda.pivot('Entity', 'Year', 0))

df_production_pivot

""">러시아 1991년 값 결측치"""

df_production_top_20_mid_eda = df_production_top_20_eda.set_index('Entity')

df_production_top_20_mid_eda.rename(columns={0:'Total Production'}, inplace=True)

df_production_top_20_mid_eda.reset_index(inplace=True)

df_production_top_20_mid_eda2 = df_production_top_20_mid_eda.sort_values(by=['Entity', 'Year']).reset_index()

df_production_top_20_fin_eda = df_production_top_20_mid_eda2.interpolate(method='values', limit_direction='backward')

df_meat_production_top20 = df_production_top_20_fin_eda.drop('index', axis=1)

df_meat_production_top20

pivot2 = pd.DataFrame(df_meat_production_top20.pivot('Entity', 'Year', 'Total Production'))

set_country = ['United States', 'China', 'Russia', 'Brazil', 'Indonesia', 'Japan',
       'Germany', 'India', 'Ukraine', 'United Kingdom', 'Canada', 'Australia',
       'France', 'Italy', 'Mexico', 'Poland', 'South Africa', 'Argentina',
       'Spain', 'Netherlands']
df_meatproduction = pivot2.loc[set_country]

meatproduction_top20 = pd.DataFrame(df_meatproduction.stack()).reset_index()

meatproduction_top20.rename(columns={0:'Total Meat Production(tonnes/year)'}, inplace=True)

greenhousegas_top20 = pd.DataFrame(df_greenhousegas_top_20.stack()).reset_index().rename(columns={'level_1':'Year', 0:'Total Greenhouse Gas(MtCo2e)'})

greenhousegas_top20[greenhousegas_top20['Year']=='2018'].sort_values(by='Total Greenhouse Gas(MtCo2e)', ascending=False).set_index('Country').index

set_Country2 = ['China', 'United States', 'India', 'Russia', 'Indonesia', 'Brazil',
       'Japan', 'Germany', 'Canada', 'Mexico', 'Australia', 'South Africa',
       'United Kingdom', 'Argentina', 'Italy', 'France', 'Poland', 'Spain',
       'Ukraine', 'Netherlands']
       #2018년 배출량 순서로 정렬함

greenhousegas_top20 = greenhousegas_top20.set_index('Country')

greenhousegas_top20_fin = greenhousegas_top20.loc[set_Country2]

greenhousegas_top20_fin = greenhousegas_top20_fin.reset_index()

others_ghg = pd.DataFrame(greenhousegas_top20_fin.pivot('Country', 'Year', 'Total Greenhouse Gas(MtCo2e)').loc[['Australia', 'South Africa',
       'United Kingdom', 'Argentina', 'Italy', 'France', 'Poland', 'Spain',
       'Ukraine', 'Netherlands']].sum())

greenhousegas_top10_eda = greenhousegas_top20_fin.set_index('Country')

greenhousegas_top10_eda

others_ghg.reset_index(inplace=True)

others_ghg['Country'] = 'Others'

others_ghg.rename(columns={0:'Total Greenhouse Gas(MtCo2e)'}, inplace=True)

others_ghg_df = pd.concat([others_ghg['Country'], others_ghg['Year'], others_ghg['Total Greenhouse Gas(MtCo2e)']], axis=1)

others_ghg_df = others_ghg_df.set_index('Country')

greenhousegas_top10 = pd.concat([greenhousegas_top10_eda.loc[['China', 'United States', 'India', 'Russia', 'Indonesia', 'Brazil',
       'Japan', 'Germany', 'Canada', 'Mexico']], others_ghg_df])

greenhousegas_top10

greenhousegas_top10 = greenhousegas_top10.reset_index()

meatproduction_top20 = meatproduction_top20.set_index('Entity')

meatproduction_top20_fin = meatproduction_top20.loc[set_Country2]

meatproduction_top20_fin = meatproduction_top20_fin.reset_index()

others_mp = pd.DataFrame(meatproduction_top20_fin.pivot('Entity', 'Year', 'Total Meat Production(tonnes/year)').loc[['Australia', 'South Africa',
       'United Kingdom', 'Argentina', 'Italy', 'France', 'Poland', 'Spain',
       'Ukraine', 'Netherlands']].sum())

meatproduction_top10_eda = meatproduction_top20_fin.set_index('Entity')

others_mp.reset_index(inplace=True)

others_mp['Entity'] = 'Others'

others_mp.rename(columns={0:'Total Meat Production(tonnes/year)'}, inplace=True)

others_mp_df = pd.concat([others_mp['Entity'], others_mp['Year'], others_mp['Total Meat Production(tonnes/year)']], axis=1)

others_mp_df = others_mp_df.set_index('Entity')

meatconsumption_top10 = pd.concat([meatproduction_top10_eda.loc[['China', 'United States', 'India', 'Russia', 'Indonesia', 'Brazil',
       'Japan', 'Germany', 'Canada', 'Mexico']], others_mp_df])

greenhousegas_top10.reset_index(inplace=True)
meatconsumption_top10.reset_index(inplace=True)

production_col = meatconsumption_top10['Total Meat Production(tonnes/year)']
df_summary = pd.concat([greenhousegas_top10, production_col], axis=1)

df_summary

df_summary_5y = pd.concat([df_summary[df_summary['Year']=='1993'],df_summary[df_summary['Year']=='1999'],df_summary[df_summary['Year']=='2005'],df_summary[df_summary['Year']=='2011'],df_summary[df_summary['Year']=='2017']])

df_summary_5y

df_summary_5y_sorting = df_summary_5y.sort_values(by=['Year'])

df_summary_5y_sorting = df_summary_5y_sorting.set_index('Year').drop('index', axis=1)

df_summary_5y_sorting

df_summary_5y_sorting.to_csv('greenhouse-gas_and_total_meat_production.csv')

df_plot = df_summary_5y_sorting.reset_index()

fig, ax = plt.subplots(1, 2, figsize=(30, 10))
sns.lineplot(data=df_plot, x='Year', y='Total Greenhouse Gas(MtCo2e)', hue='Country', ax=ax[0])
sns.lineplot(data=df_plot, x='Year', y='Total Meat Production(tonnes/year)', hue='Country', ax=ax[1])